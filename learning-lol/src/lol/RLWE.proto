package crypto.proto.RLWE;

// proto messages for the RLWE/RLWR problems

import "Lol.proto";

// Proto messages for RLWE/RLWR samples

// run this: hprotoc RLWE.proto

// protoc RLWE.proto [-cpp_out=path/to/cpp/parser] [--java_out=path/to/java/parser] [--python_out=path/to/python/parser]

// the Sample*1 messages were used to serialize RLWE/RLWR samples in the
// RLWE/RLWR challenges, and only support cyclotomic rings mod a single modulus
message SampleCont {
  required crypto.proto.lol.Rq a      = 1;
  required crypto.proto.lol.Kq b      = 2;
}

message SampleDisc {
  required crypto.proto.lol.Rq a      = 1;
  required crypto.proto.lol.Rq b      = 2;
}

message SampleRLWR {
  required crypto.proto.lol.Rq a      = 1;
  required crypto.proto.lol.Rq b      = 2;  // for some modulus p < q
}

// continuous RLWE sample, possibly with mutliple moduli
message SampleContProduct {
  required crypto.proto.lol.RqProduct a = 1;
  required crypto.proto.lol.KqProduct b = 2;
}

// discrete RLWE sample, possibly with multiple moduli
message SampleDiscProduct {
  required crypto.proto.lol.RqProduct a = 1;
  required crypto.proto.lol.RqProduct b = 2;
}

// RLWR sample, possibly with multiple moduli
message SampleRLWRProduct {
  required crypto.proto.lol.RqProduct a = 1;
  required crypto.proto.lol.RqProduct b = 2;  // for some modulus p < q
}
